PaGe: Parser Generator for LALR(1) Grammar for/by Common Lisp


      +-------------------------+
      | PaGe		        |
      |      +-----------+      |
      |  +-->| PaGe-Core |---+  |
----->|--+   +-----------+   +->|----->
      |  +-------------------+  |
      |				|
      +-------------------------+


- 必要最低限の機能のみを備えたパーザジェネレータを実装したい
  ポータビリティを高めて様々な用途に気兼ねなく使えるように

- しかし単体でもそれなりの機能を備えたものにしたい
  --> エンジン部分の PaGe-Core と、それに幾つかの機能を付け加えた PaGe

- CL-yacc や bison のような形式の入力への対応は Core のラッパーとして与える
  従来のパーザジェネレータと同様に利用できる PaGe と、その基盤である PaGe-Core の 2 層構造からなる

- PaGe-Core は入力形式を限定することでプログラムを単純且つ効率良く実装
  数値ベースの処理にしたことで配列を素直に利用できたり、
  非終端記号か否かの判定を数値の比較で実現できたりなどのメリットが得られた
  
- DeRemer の手法を採用し、アルゴリズムの面でも効率的に
  DeRemer の手法は理論的に綺麗なのだが、その実装はそれほど多くない
  アルゴリズムをわかりやすく、かつ簡潔に実装し、参考となるようなものを目指していた

- 曖昧性除去に関しても、演算子の結合性ではなく文法規則に注目することでより素朴な形で conflict を解決する
  入力文法の各文法規則について、Shift の際に参照される priority と Reduce の際に参照される priority 、2つの値を割り当てる。
  conflict の解決にはこの priority を利用する
  演算子の結合の強さや結合性についての情報はこの形式に翻訳可能できた
  従来の方法より素朴で自然な方法ではないかと考えている





